import React
  // , { createContext, useContext, useState }
  from 'react';
import PropTypes from 'prop-types'

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
const ThemeContext = React.createContext('light');
const moods = {
  happy: 'üòÑ',
  sad: 'üò≠'
}
const MoodContext = React.createContext(moods);

function ThemeProvider({ children }) {
  const [theme, setTheme] = React.useState('light');
  const toggleTheme = () => {
    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));
  };

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme }}>
      {children}
    </ThemeContext.Provider>
  );
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º useContext –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
function ThemeTogglerButton() {
  const { theme, toggleTheme } = React.useContext(ThemeContext);
  const style = {
    background: theme === 'light' ? '#fff' : '#333',
    color: theme === 'light' ? '#000' : '#fff'
  }

  return (
    <button onClick={toggleTheme} style={style}>
      Toggle Theme
    </button>
  );
}

function MoodEmoji() {
  const mood = React.useContext(MoodContext)

  return <p>{mood}</p>

  // –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω –ø—Ä–∏–º–µ—Ä —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏ —Ç–æ–≥–æ –∫–∞–∫ –º–æ–∂–Ω–æ –æ—Ç—Ä–µ–Ω–µ–¥—Ä–∏—Ç—å mood —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ Consumer
  // return <MoodContext.Consumer>
  //   {({ mood }) => <p>{mood}</p>}
  // </MoodContext.Consumer>
}

function UseContext() {
  return (
    <ThemeProvider>
      <>
        <MoodContext.Provider value={moods.happy}>
          <MoodEmoji />
        </MoodContext.Provider>
      </>
      <>
        <h1>Welcome to the Themed UseContext!</h1>
        <ThemeTogglerButton />
      </>
    </ThemeProvider>
  );
}

ThemeProvider.propTypes = {
  children: PropTypes.node.isRequired,
};

export default UseContext;

/*
useContext –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (—Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é createContext) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –±–ª–∏–∂–∞–π—à–µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –≤—ã—à–µ –≤ –¥–µ—Ä–µ–≤–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–µ useContext, –±—É–¥—É—Ç –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
–ö–æ–Ω—Ç–µ–∫—Å—Ç—ã –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ç–µ–º–∞, —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
*/
